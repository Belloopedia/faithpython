{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "99975dae",
   "metadata": {},
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'flask_sqlalchemy'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "Input \u001b[1;32mIn [1]\u001b[0m, in \u001b[0;36m<cell line: 3>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;66;03m# Import necessary libraries\u001b[39;00m\n\u001b[0;32m      2\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mflask\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m Flask, render_template, request, redirect, url_for, flash\n\u001b[1;32m----> 3\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mflask_sqlalchemy\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m SQLAlchemy\n\u001b[0;32m      4\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mrequests\u001b[39;00m\n\u001b[0;32m      5\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mtwilio\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mrest\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m Client\n",
      "\u001b[1;31mModuleNotFoundError\u001b[0m: No module named 'flask_sqlalchemy'"
     ]
    }
   ],
   "source": [
    "# Import necessary libraries\n",
    "from flask import Flask, render_template, request, redirect, url_for, flash\n",
    "from flask_sqlalchemy import SQLAlchemy\n",
    "import requests\n",
    "from twilio.rest import Client\n",
    "from flask_mail import Mail, Message\n",
    "import os\n",
    "\n",
    "# Initialize Flask app\n",
    "app = Flask(__name__)\n",
    "app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///electricity_payments.db'\n",
    "app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False\n",
    "app.config['SECRET_KEY'] = 'your_secret_key'\n",
    "\n",
    "# Initialize SQLAlchemy\n",
    "db = SQLAlchemy(app)\n",
    "\n",
    "# Initialize Flask-Mail\n",
    "mail = Mail(app)\n",
    "app.config['MAIL_SERVER'] = 'smtp.yourmailprovider.com'\n",
    "app.config['MAIL_PORT'] = 587\n",
    "app.config['MAIL_USE_TLS'] = True\n",
    "app.config['MAIL_USE_SSL'] = False\n",
    "app.config['MAIL_USERNAME'] = 'your_email@example.com'\n",
    "app.config['MAIL_PASSWORD'] = 'your_email_password'\n",
    "\n",
    "# Define the ElectricityPayment model\n",
    "class ElectricityPayment(db.Model):\n",
    "    id = db.Column(db.Integer, primary_key=True)\n",
    "    user_name = db.Column(db.String(50), nullable=False)\n",
    "    email = db.Column(db.String(100), nullable=False)\n",
    "    phone_number = db.Column(db.String(15), nullable=False)\n",
    "    meter_reading = db.Column(db.Float, nullable=False)\n",
    "    amount_paid = db.Column(db.Float, nullable=False)\n",
    "\n",
    "# Route for home page\n",
    "@app.route('/')\n",
    "def home():\n",
    "    return render_template('home.html')\n",
    "\n",
    "# Route for electricity payment form\n",
    "@app.route('/payment', methods=['GET', 'POST'])\n",
    "def payment():\n",
    "    if request.method == 'POST':\n",
    "        user_name = request.form['user_name']\n",
    "        email = request.form['email']\n",
    "        phone_number = request.form['phone_number']\n",
    "        meter_reading = float(request.form['meter_reading'])\n",
    "        amount_paid = float(request.form['amount_paid'])\n",
    "\n",
    "        # Save payment details to the database\n",
    "        payment = ElectricityPayment(\n",
    "            user_name=user_name,\n",
    "            email=email,\n",
    "            phone_number=phone_number,\n",
    "            meter_reading=meter_reading,\n",
    "            amount_paid=amount_paid\n",
    "        )\n",
    "        db.session.add(payment)\n",
    "        db.session.commit()\n",
    "\n",
    "        # Send SMS using Twilio\n",
    "        send_sms(phone_number, f\"Payment of ${amount_paid} received. Thank you!\")\n",
    "\n",
    "        # Send Email using Flask-Mail\n",
    "        send_email(email, f\"Payment Confirmation - Electricity Payment\",\n",
    "                   f\"Dear {user_name},\\n\\nThank you for your payment of ${amount_paid}.\\n\\nSincerely,\\nThe Electricity Company\")\n",
    "\n",
    "        flash('Payment successful!', 'success')\n",
    "        return redirect(url_for('home'))\n",
    "\n",
    "    return render_template('payment.html')\n",
    "\n",
    "def send_sms(phone_number, message):\n",
    "    # Twilio credentials\n",
    "    account_sid = 'your_twilio_account_sid'\n",
    "    auth_token = 'your_twilio_auth_token'\n",
    "    twilio_phone_number = 'your_twilio_phone_number'\n",
    "\n",
    "    # Initialize Twilio client\n",
    "    client = Client(account_sid, auth_token)\n",
    "\n",
    "    # Send SMS\n",
    "    client.messages.create(\n",
    "        body=message,\n",
    "        from_=twilio_phone_number,\n",
    "        to=phone_number\n",
    "    )\n",
    "\n",
    "def send_email(email, subject, body):\n",
    "    # Send email using Flask-Mail\n",
    "    msg = Message(subject, recipients=[email])\n",
    "    msg.body = body\n",
    "    mail.send(msg)\n",
    "\n",
    "if __name__ == '__main__':\n",
    "    # Create database tables\n",
    "    db.create_all()\n",
    "    \n",
    "    # Run the Flask application\n",
    "    app.run(debug=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f3a440ec",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
